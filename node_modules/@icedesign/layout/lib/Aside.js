'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _AsideTrigger = require('./AsideTrigger');

var _AsideTrigger2 = _interopRequireDefault(_AsideTrigger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var IceLayoutAside = (_temp = _class = function (_Component) {
  _inherits(IceLayoutAside, _Component);

  function IceLayoutAside(props) {
    _classCallCheck(this, IceLayoutAside);

    var _this = _possibleConstructorReturn(this, (IceLayoutAside.__proto__ || Object.getPrototypeOf(IceLayoutAside)).call(this, props));

    _this.handleTriggerClick = function (collapsed) {
      _this.setState({
        collapsed: collapsed
      });

      if (typeof _this.props.onCollapseChange === 'function') {
        _this.props.onCollapseChange(collapsed);
      }
    };

    _this.state = {
      collapsed: props.collapsed
    };
    return _this;
  }

  _createClass(IceLayoutAside, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if ('collapsed' in nextProps) {
        if (nextProps.collapsed !== this.props.collapsed) {
          this.setState({
            collapsed: nextProps.collapsed
          });
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          className = _props.className,
          collapsedWidth = _props.collapsedWidth,
          scrollable = _props.scrollable,
          style = _props.style,
          theme = _props.theme,
          trigger = _props.trigger,
          width = _props.width,
          onCollapseChange = _props.onCollapseChange,
          collapsed = _props.collapsed,
          others = _objectWithoutProperties(_props, ['children', 'className', 'collapsedWidth', 'scrollable', 'style', 'theme', 'trigger', 'width', 'onCollapseChange', 'collapsed']);

      var classes = (0, _classnames2.default)('ice-layout-aside', _defineProperty({
        'ice-layout-scrollable': scrollable,
        'ice-layout-aside-has-trigger': trigger === true
      }, 'ice-layout-theme-' + theme, theme), className);

      var widthValue = typeof width === 'number' ? width + 'px' : width;

      var collapsedWidthValue = typeof collapsedWidth === 'number' ? collapsedWidth + 'px' : collapsedWidth;

      var asideStyle = _extends({}, style, {
        flex: '0 0 ' + (this.state.collapsed ? collapsedWidthValue : widthValue),
        width: '' + (this.state.collapsed ? collapsedWidthValue : widthValue)
      });

      return _react2.default.createElement(
        'div',
        _extends({}, others, { className: classes, style: asideStyle }),
        children,
        trigger === true && _react2.default.createElement(_AsideTrigger2.default, {
          onClick: this.handleTriggerClick,
          collapsed: this.state.collapsed
        })
      );
    }
  }]);

  return IceLayoutAside;
}(_react.Component), _class.displayName = 'IceLayoutAside', _class.propTypes = {
  /**
   * 是否收起
   */
  collapsed: _propTypes2.default.bool,
  /**
   * 可滚动
   * @description Layout 开启 fixable 后有效
   */
  scrollable: _propTypes2.default.bool,
  /**
   * 收起后的宽度
   */
  collapsedWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  /**
   * collapsed 收起状态切换
   * @params {Boolean} 切换后的状态
   */
  onCollapseChange: _propTypes2.default.func,
  /**
   * 展示默认 trigger
   */
  trigger: _propTypes2.default.bool,
  /**
   * 宽度
   */
  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  /**
   * 主题
   */
  theme: _propTypes2.default.oneOf(['dark', 'light'])
}, _class.defaultProps = {
  theme: 'light',
  collapsed: undefined,
  collapsedWidth: 80,
  onCollapseChange: function onCollapseChange() {},
  scrollable: false,
  trigger: false,
  width: 200
}, _temp);
exports.default = IceLayoutAside;


IceLayoutAside.Trigger = _AsideTrigger2.default;
module.exports = exports['default'];