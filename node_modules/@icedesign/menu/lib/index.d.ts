
/// <reference types="react" />

import React from 'react';

export interface DividerProps {

}

export class Divider extends React.Component<DividerProps, any> {

}

export interface ItemProps {

}

export class Item extends React.Component<ItemProps, any> {

}

export interface SubMenuProps {

}

export class SubMenu extends React.Component<SubMenuProps, any> {

}

export interface ItemGroupProps {

}

export class ItemGroup extends React.Component<ItemGroupProps, any> {

}
export interface MenuProps {

    /**
     * className 前缀
     */
    prefixCls?: string;

    /**
     * 主题风格（暗色系、亮色系）
     */
    theme?: 'light' | 'dark';

    /**
     * 主题颜色
     */
    color?: '' | 'green' | 'red' | 'blue' | 'orange' | 'reseo';

    /**
     * 当前选中的菜单项 key 数组
     */
    selectedKeys?: Array<any>;

    /**
     * 初始选中的菜单项 key 数组
     */
    defaultSelectedKeys?: Array<any>;

    /**
     * 初始展开的 SubMenu 菜单项 key 数组
     */
    defaultOpenKeys?: Array<any>;

    /**
     * 当前展开的 SubMenu 菜单项 key 数组
     */
    openKeys?: Array<any>;

    /**
     * 菜单类型，现在支持垂直、水平、和内嵌模式三种 string: vertical horizontal inline
     */
    mode?: string;

    /**
     * 是否允许多选
     */
    multiple?: any;

    /**
     * inline 模式的菜单缩进宽度
     */
    inlineIndent?: number;

    /**
     * 点击 MenuItem 调用此函数
     */
    onClick?: (() => void);

    /**
     * SubMenu 展开/关闭的回调
     */
    onOpenChange?: (() => void);

    /**
     * 被选中时调
     */
    onSelect?: (() => void);

    /**
     * 取消选中时调用，仅在 multiple 生效
     */
    onDeselect?: (() => void);

    /**
     * inline 时菜单是否收起状态
     */
    inlineCollapsed?: any;

    /**
     * className
     */
    className?: string;

}

export default class Menu extends React.Component<MenuProps, any> {
    static Divider: typeof Divider;
    static Item: typeof Item;
    static SubMenu: typeof SubMenu;
    static ItemGroup: typeof ItemGroup;
}
