'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _aliCDNSuffix = require('./aliCDNSuffix');

var _aliCDNSuffix2 = _interopRequireDefault(_aliCDNSuffix);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Cover = (_temp = _class = function (_Component) {
  _inherits(Cover, _Component);

  function Cover(props) {
    _classCallCheck(this, Cover);

    var _this = _possibleConstructorReturn(this, (Cover.__proto__ || Object.getPrototypeOf(Cover)).call(this, props));

    _this.imgOnload = function () {
      _this.setState({
        imgStyles: {
          display: 'block',
          maxWidth: 'none',
          wdith: 'auto',
          height: 'auto',
          // transition: 'opacity 0.2s ease',
          opacity: 0
        }
      }, function () {
        var imgDOM = _this.refsImg;
        var _this$props = _this.props,
            width = _this$props.width,
            height = _this$props.height;

        var imgWidth = imgDOM.width;
        var imgHeight = imgDOM.height;

        var imgStyles = getStyles(width, height, imgWidth, imgHeight);
        _this.setState({
          imgStyles: _extends({}, _this.state.imgStyles, imgStyles, {
            opacity: 1
          })
        });
      });
    };

    _this.state = {
      imgStyles: {
        display: 'block',
        maxWidth: 'none',
        wdith: 'auto',
        height: 'auto',
        // transition: 'opacity 0.2s ease',
        opacity: 0
      }
    };
    return _this;
  }

  _createClass(Cover, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.width !== this.props.width || nextProps.height !== this.props.height) {
        // fix http://ice.alibaba-inc.com/playground/549
        this.imgOnload();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          alt = _props.alt,
          title = _props.title,
          src = _props.src,
          width = _props.width,
          height = _props.height,
          _props$style = _props.style,
          style = _props$style === undefined ? {} : _props$style,
          className = _props.className,
          onError = _props.onError,
          shape = _props.shape,
          enableAliCDNSuffix = _props.enableAliCDNSuffix;


      var styles = _extends({}, style, {
        display: 'inline-block',
        overflow: 'hidden',
        width: width,
        height: height
      });
      var imgStyles = this.state.imgStyles;


      var realSrc = enableAliCDNSuffix ? src + (0, _aliCDNSuffix2.default)({ width: width, height: height }) : src;

      var cls = (0, _classnames2.default)('ice-img', shape, className);

      return _react2.default.createElement(
        'div',
        { className: cls, style: styles },
        _react2.default.createElement('img', {
          style: imgStyles,
          onError: onError,
          ref: function ref(_ref) {
            _this2.refsImg = _ref;
          },
          src: realSrc,
          alt: alt,
          title: title,
          onLoad: this.imgOnload
        })
      );
    }
  }]);

  return Cover;
}(_react.Component), _class.displayName = 'Cover', _class.propTypes = {
  src: _propTypes2.default.string.isRequired,
  width: _propTypes2.default.number,
  height: _propTypes2.default.number,
  alt: _propTypes2.default.string,
  onError: _propTypes2.default.func
}, _class.defaultProps = {
  onError: function onError() {},
  alt: '',
  width: 0,
  height: 0
}, _temp);
exports.default = Cover;


var getStyles = function getStyles(wrapWidth, wrapHeight, imgWidth, imgHeight) {
  // 进行等比运算
  var wrapRatio = wrapWidth / wrapHeight;
  var imgRatio = imgWidth / imgHeight;

  var finalWidth = 0;
  var finalHeight = 0;
  var finalMarginTop = 0;
  var finalMarginLeft = 0;

  if (wrapRatio > imgRatio) {
    // 父框宽度更大，以父框的宽度为准，拉伸图片上移
    finalWidth = wrapWidth;
    finalHeight = finalWidth / imgRatio;
    finalMarginTop = (finalHeight - wrapHeight) / 2 * -1;
  } else {
    // 父框高度更大，以父框高度为准，拉伸图片左移动
    finalHeight = wrapHeight;
    finalWidth = finalHeight * imgRatio;
    finalMarginLeft = (finalWidth - wrapWidth) / 2 * -1;
  }

  return {
    height: finalHeight,
    width: finalWidth,
    marginLeft: finalMarginLeft,
    marginTop: finalMarginTop
  };
};
module.exports = exports['default'];