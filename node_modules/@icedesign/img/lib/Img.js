'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Cover = require('./modules/Cover');

var _Cover2 = _interopRequireDefault(_Cover);

var _Contain = require('./modules/Contain');

var _Contain2 = _interopRequireDefault(_Contain);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var IceImg = (_temp = _class = function (_Component) {
  _inherits(IceImg, _Component);

  function IceImg(props) {
    _classCallCheck(this, IceImg);

    var _this = _possibleConstructorReturn(this, (IceImg.__proto__ || Object.getPrototypeOf(IceImg)).call(this, props));

    _this.handleImgLoadError = function () {
      if (_this.props.errorImgSrc) {
        _this.setState({
          src: _this.props.errorImgSrc
        });
      }
      if (typeof _this.props.onError === 'string') {
        _this.props.onError();
      }
    };

    _this.state = {
      src: props.src
    };
    return _this;
  }

  _createClass(IceImg, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if ('src' in nextProps) {
        this.setState({
          src: nextProps.src
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var type = this.props.type;


      if (type === 'contain') {
        return _react2.default.createElement(_Contain2.default, _extends({}, this.props, this.state, {
          onError: this.handleImgLoadError
        }));
      }

      return _react2.default.createElement(_Cover2.default, _extends({}, this.props, this.state, {
        onError: this.handleImgLoadError
      }));
    }
  }]);

  return IceImg;
}(_react.Component), _class.displayName = 'IceImg', _class.propTypes = {
  /**
   * 图片显示模式
   */
  type: _propTypes2.default.oneOf(['cover', 'contain']),
  /**
   * 图片 url
   */
  src: _propTypes2.default.string.isRequired,
  /**
   * 图片的 title，hover 上去会显示出来
   */
  title: _propTypes2.default.string,
  /**
   * 图片加载失败的兜底图片
   */
  errorImgSrc: _propTypes2.default.string,
  /**
   * 图片加载失败的回调方法
   */
  onError: _propTypes2.default.func,
  /**
   * 图片显示宽度
   */
  width: _propTypes2.default.number,
  /**
   * 图片显示高度
   */
  height: _propTypes2.default.number,
  /**
   * 图片的 alt 通常用于屏幕阅读器（盲人）识别
   */
  alt: _propTypes2.default.string,
  /**
   * 形状展现
   */
  shape: _propTypes2.default.string,
  /**
   * 启用阿里 CDN 图片优化压缩后缀
   */
  enableAliCDNSuffix: _propTypes2.default.bool
}, _class.defaultProps = {
  type: 'cover',
  alt: '',
  title: '',
  errorImgSrc: '',
  shape: 'sharp',
  enableAliCDNSuffix: false,
  onError: function onError() {},
  width: 'auto',
  height: 'auto'
}, _temp);
exports.default = IceImg;
module.exports = exports['default'];